package com.cts.servicebookingmanagement.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.cts.servicebookingmanagement.feign.AuthClient;
import com.cts.servicebookingmanagement.model.AppServiceReq;
import com.cts.servicebookingmanagement.model.AppServiceReqReport;
import com.cts.servicebookingmanagement.model.JwtResponse;
import com.cts.servicebookingmanagement.service.BookingService;

@RestController
@CrossOrigin(allowedHeaders = "*", origins = "*")
public class BookingController {

	@Autowired
	private BookingService bookingService;
	
	@Autowired
	private AuthClient authClient;
	
	@GetMapping("/awsBooking")
	public String welcome() {
    	return "Booking Service Deployed to Cloud";
	}
	
    @PostMapping("/servicereq")
	public AppServiceReq createBooking(@RequestBody AppServiceReq appServiceReq) {
		return bookingService.createBooking(appServiceReq);
	}
	
	@GetMapping("/servicereq")
	public List<AppServiceReq> getBooking(){
		return bookingService.getBooking();		
	}
	
	
	@PutMapping("/servicereq")
	public AppServiceReq updateBooking(@RequestHeader(name="authorization",required = true)String token,@RequestBody AppServiceReq appServiceReq) {
		JwtResponse jwtResponse = authClient.verifyToken(token);
		return  bookingService.updateBooking(appServiceReq);
	}
	
	@DeleteMapping("/servicereq/{id}")
	public void deleteUser(@RequestParam Integer id) {
		bookingService.deleteBooking(id);
	}
	
	@GetMapping("/servicereq/{userid}")
	public AppServiceReq getUserById(@PathVariable("userid") Integer userid) {
		
		return bookingService.getBookingById(userid);
	}
	
	@GetMapping("/servicereq/{status}")
	public AppServiceReq getServiceByStatus(@PathVariable("status") String status) {
		
		return bookingService.getServiceByStatus(status);
	}
	
	@GetMapping("/servicereq/{report}")
	public AppServiceReq getServiceByReport(@PathVariable("report") String report) {
		
		return bookingService.getServiceByReport(report);
	}
	
	@GetMapping("/servicereq/report")
	public List<AppServiceReqReport> getAllBookingReport(@RequestHeader(name="authorization",required = true)String token){
		JwtResponse jwtResponse = authClient.verifyToken(token);
		return bookingService.getAllBookingReport();		
	}
	
	@GetMapping("/servicereq/report/{userid}")
	public AppServiceReq getReportById(@PathVariable("userid") Integer userid) {
		
		return bookingService.getReportById(userid);
	}
	
	@GetMapping("/servicereq/report/{reportId}")
	public AppServiceReqReport getReportByreportId(@PathVariable("reportId") Integer reportId) {
		
		return bookingService.getReportByreportId(reportId);
	}
	
	@PostMapping("/servicereq/report")
	public AppServiceReqReport addReport(@RequestBody AppServiceReqReport appServiceReqReport) {
		return bookingService.addReport(appServiceReqReport);
	}
   
	@DeleteMapping("/servicereq/{reportId}")
	public void deleteReport(@PathVariable Integer reportId) {
		bookingService.deleteReport(reportId);
	}
	
/*	
     1.POST: /servicereq/ - Creating new service booking  ->complete
     2.PUT: /servicereq/ - Updating Service booking   ->complete
     3.GET: /servicereq/ - Get All Service Bookings     ->complete
     4.DELETE:/servicereq/{id} - Deletes particular service booking  ->complete
     5.GET: /servicereq/{userId} - Get service bookings generated by particular user ->complete
     6.GET: /servicereq/{status} - Get Service Bookings by its status   ->remaining
     7.POST: /servicereq/report - Users can save visit report for particular Service ->complete//
     8.GET: /servicereq/report - Get all visit reports   -remaining  //
     9.GET: /servicereq/report/{userId} - getting visit reports for particular user  ->complete
     10.GET: /servicereq/report/{reportId} - Getting  visit report from reporti  ->complete
     
	
	
	
	Login with Awt Authorisation*-complete*/ 

}
